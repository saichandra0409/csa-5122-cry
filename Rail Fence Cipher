#include <stdio.h>
#include <string.h>

// Function to encrypt using 2-rail Rail Fence Cipher
void encrypt(char *msg, char *cipher) {
    int len = strlen(msg);
    int k = 0;

    // First rail: characters at even indices
    for (int i = 0; i < len; i += 2)
        cipher[k++] = msg[i];

    // Second rail: characters at odd indices
    for (int i = 1; i < len; i += 2)
        cipher[k++] = msg[i];

    cipher[len] = '\0';
}

// Function to decrypt using 2-rail Rail Fence Cipher
void decrypt(char *cipher, char *msg) {
    int len = strlen(cipher);
    int mid = (len + 1) / 2;
    int i = 0, j = mid, k = 0;

    // Alternate from first half and second half
    while (i < mid && j < len) {
        msg[k++] = cipher[i++];
        msg[k++] = cipher[j++];
    }
    // If length is odd, add the last remaining character
    if (i < mid)
        msg[k++] = cipher[i];

    msg[k] = '\0';
}

int main() {
    char text[100], result[100];
    int choice;

    printf("Press 1 to Encrypt or 2 to Decrypt: ");
    scanf("%d", &choice);
    getchar(); // clear input buffer

    printf("Enter the message (no spaces recommended): ");
    fgets(text, sizeof(text), stdin);
    text[strcspn(text, "\n")] = '\0';

    if (choice == 1) {
        encrypt(text, result);
        printf("Encrypted text: %s\n", result);
    } else if (choice == 2) {
        decrypt(text, result);
        printf("Decrypted text: %s\n", result);
    } else {
        printf("Invalid choice.\n");
    }

    return 0;
}
